{
    "____comment": "This file was generated with eosio-abigen. DO NOT EDIT ",
    "version": "eosio::abi/1.1",
    "types": [],
    "structs": [
        {
            "name": "approve",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "approver",
                    "type": "name"
                }
            ]
        },
        {
            "name": "cancel",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                }
            ]
        },
        {
            "name": "claim",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                }
            ]
        },
        {
            "name": "clean",
            "base": "",
            "fields": []
        },
        {
            "name": "close",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                }
            ]
        },
        {
            "name": "escrow_row",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "sender",
                    "type": "name"
                },
                {
                    "name": "receiver",
                    "type": "name"
                },
                {
                    "name": "approver",
                    "type": "name"
                },
                {
                    "name": "approvals",
                    "type": "name[]"
                },
                {
                    "name": "ext_asset",
                    "type": "extended_asset"
                },
                {
                    "name": "memo",
                    "type": "string"
                },
                {
                    "name": "created_at",
                    "type": "time_point_sec"
                },
                {
                    "name": "expires_at",
                    "type": "time_point_sec"
                },
                {
                    "name": "locked",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "extend",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "expires_at",
                    "type": "time_point_sec"
                }
            ]
        },
        {
            "name": "init",
            "base": "",
            "fields": [
                {
                    "name": "sender",
                    "type": "name"
                },
                {
                    "name": "receiver",
                    "type": "name"
                },
                {
                    "name": "approver",
                    "type": "name"
                },
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "expires_at",
                    "type": "time_point_sec"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "lock",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "locked",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "refund",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                }
            ]
        },
        {
            "name": "unapprove",
            "base": "",
            "fields": [
                {
                    "name": "escrow_name",
                    "type": "name"
                },
                {
                    "name": "unapprover",
                    "type": "name"
                }
            ]
        }
    ],
    "actions": [
        {
            "name": "approve",
            "type": "approve",
            "ricardian_contract": "## Description\n\nTo approve the release of funds to the intended {{ receiver }}. Each escrow agreement requires at least {{ sender }} or {{ approver }} to grant fund release."
        },
        {
            "name": "cancel",
            "type": "cancel",
            "ricardian_contract": "## Description\n\nTo cancel an escrow agreement. This action can only be performed by the {{ sender }} as long as no funds have already been transferred for the escrow agreement. Otherwise they would need to wait for the expiry time and then use the refund action."
        },
        {
            "name": "claim",
            "type": "claim",
            "ricardian_contract": "To claim the escrowed funds for an intended {{ receiver }} after an escrow agreement has met the required approvals."
        },
        {
            "name": "clean",
            "type": "clean",
            "ricardian_contract": "## Description\n\nTo remove all existing escrow agreements for developer purposes. This can only be run with _self permission of the contract which would be unavailable on the main net once the contract permissions are removed for the contract account."
        },
        {
            "name": "close",
            "type": "close",
            "ricardian_contract": "Allows the {{ approver }} to close and refund an unexpired escrow"
        },
        {
            "name": "extend",
            "type": "extend",
            "ricardian_contract": "## Description\n\nAllows the sender to extend the expiry"
        },
        {
            "name": "init",
            "type": "init",
            "ricardian_contract": "## Description\n\nTo create an empty escrow payment agreement for safe and secure funds transfer protecting both {{ sender }} and {{ receiver }} for a determined amount of time."
        },
        {
            "name": "lock",
            "type": "lock",
            "ricardian_contract": "## Description\n\nAllows the {{ approver }} to lock an escrow preventing any actions by {{ sender }} or {{ receiver }}."
        },
        {
            "name": "refund",
            "type": "refund",
            "ricardian_contract": "To return the escrowed funds back to the original {{ sender }}. This action can only be run after the contract has met the intended expiry time."
        },
        {
            "name": "unapprove",
            "type": "unapprove",
            "ricardian_contract": "## Description\n\nTo unapprove the release of funds to the intended receiver from a previous approved action."
        }
    ],
    "tables": [
        {
            "name": "escrows",
            "type": "escrow_row",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        }
    ],
    "ricardian_clauses": [
        {
            "id": "ENTIRE AGREEMENT",
            "body": "This contract contains the entire agreement of the parties, for all described actions, and there are no other promises or conditions in any other agreement whether oral or written concerning the subject matter of this Contract. This contract supersedes any prior written or oral agreements between the parties."
        },
        {
            "id": "BINDING CONSTITUTION",
            "body": "All the the action descibed in this contract are subject to the BOS consitution as held at https://boscore.io. This includes, but is not limited to membership terms and conditions, dispute resolution and severability."
        }
    ],
    "variants": []
}